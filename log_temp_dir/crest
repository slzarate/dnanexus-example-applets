2017-08-08 00:00:14,376 : Removing: 2017-08-07-crest.md
2017-08-08 00:00:14,377 : Entering Front Matter class
2017-08-08 00:00:14,377 : Front matter field: date value 2017-08-08
2017-08-08 00:00:14,377 : Front matter field: title value CREST
2017-08-08 00:00:14,378 : Front matter field: categories value Example Applet
2017-08-08 00:00:14,379 : front matter written
2017-08-08 00:00:14,379 : Code region search
2017-08-08 00:00:14,379 : regular comment, line: #!/bin/bash
2017-08-08 00:00:14,379 : regular comment, line: # crest 0.0.1
2017-08-08 00:00:14,380 : regular comment, line: # Generated by dx-app-wizard.
2017-08-08 00:00:14,380 : regular comment, line: #
2017-08-08 00:00:14,380 : regular comment, line: # Basic execution pattern: Your app will run on a single machine from
2017-08-08 00:00:14,380 : regular comment, line: # beginning to end.
2017-08-08 00:00:14,380 : regular comment, line: #
2017-08-08 00:00:14,380 : regular comment, line: # Your job's input variables (if any) will be loaded as environment
2017-08-08 00:00:14,381 : regular comment, line: # variables before this script runs.  Any array inputs will be loaded
2017-08-08 00:00:14,381 : regular comment, line: # as bash arrays.
2017-08-08 00:00:14,381 : regular comment, line: #
2017-08-08 00:00:14,381 : regular comment, line: # Any code outside of main() (or any entry point you may add) is
2017-08-08 00:00:14,381 : regular comment, line: # ALWAYS executed, followed by running the entry point itself.
2017-08-08 00:00:14,381 : regular comment, line: #
2017-08-08 00:00:14,382 : regular comment, line: # See http://wiki.dnanexus.com/Developer-Portal for tutorials on how
2017-08-08 00:00:14,382 : regular comment, line: # to modify this file.
2017-08-08 00:00:14,382 : regular comment, line: # The following line(s) use the dx command-line tool to download your file
2017-08-08 00:00:14,382 : regular comment, line: # inputs to the local file system using variable names for the filenames. To
2017-08-08 00:00:14,382 : regular comment, line: # recover the original filenames, you can use the output of "dx describe
2017-08-08 00:00:14,382 : regular comment, line: # "$variable" --name".
2017-08-08 00:00:14,383 : regular comment, line: # I could have just added "libbio-samtools-perl" in the dxapp.json execDepends field
2017-08-08 00:00:14,383 : regular comment, line: # decided to install it "manually" here since it pulls so many recommended packages
2017-08-08 00:00:14,383 : regular comment, line: # with it that it takes ~10 minutes to set up the worker
2017-08-08 00:00:14,383 : regular comment, line: # Fill in your application code here.
2017-08-08 00:00:14,383 : regular comment, line: #echo "looking in /usr/bin"
2017-08-08 00:00:14,383 : regular comment, line: #ls -l /usr/bin
2017-08-08 00:00:14,384 : regular comment, line: # block until our Blat server is up:
2017-08-08 00:00:14,384 : regular comment, line: #
2017-08-08 00:00:14,384 : regular comment, line: # To report any recognized errors in the correct format in
2017-08-08 00:00:14,384 : regular comment, line: # $HOME/job_error.json and exit this script, you can use the
2017-08-08 00:00:14,384 : regular comment, line: # dx-jobutil-report-error utility as follows:
2017-08-08 00:00:14,385 : regular comment, line: #
2017-08-08 00:00:14,385 : regular comment, line: #   dx-jobutil-report-error "My error message"
2017-08-08 00:00:14,385 : regular comment, line: #
2017-08-08 00:00:14,385 : regular comment, line: # Note however that this entire bash script is executed with -e
2017-08-08 00:00:14,385 : regular comment, line: # when running in the cloud, so any line which returns a nonzero
2017-08-08 00:00:14,385 : regular comment, line: # exit code will prematurely exit the script; if no error was
2017-08-08 00:00:14,386 : regular comment, line: # reported in the job_error.json file, then the failure reason
2017-08-08 00:00:14,386 : regular comment, line: # will be AppInternalError with a generic error message.
2017-08-08 00:00:14,386 : regular comment, line: # The following line(s) use the dx command-line tool to upload your file
2017-08-08 00:00:14,386 : regular comment, line: # outputs after you have created them on the local file system.  It assumes
2017-08-08 00:00:14,386 : regular comment, line: # that you have used the output field name for the filename for each output,
2017-08-08 00:00:14,386 : regular comment, line: # but you can change that behavior to suit your needs.  Run "dx upload -h"
2017-08-08 00:00:14,386 : regular comment, line: # to see more options to set metadata.
2017-08-08 00:00:14,387 : regular comment, line: # The following line(s) use the utility dx-jobutil-add-output to format and
2017-08-08 00:00:14,387 : regular comment, line: # add output variables to your job's output as appropriate for the output
2017-08-08 00:00:14,387 : regular comment, line: # class.  Run "dx-jobutil-add-output -h" for more information on what it
2017-08-08 00:00:14,387 : regular comment, line: # does.
2017-08-08 00:00:14,387 : Creating code regions
