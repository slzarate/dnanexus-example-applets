2017-08-08 00:00:14,604 : Removing: 2017-08-07-samtools_count_subprocess_py.md
2017-08-08 00:00:14,604 : Entering Front Matter class
2017-08-08 00:00:14,605 : Front matter field: date value 2017-08-08
2017-08-08 00:00:14,605 : Front matter field: title value Subprocess module
2017-08-08 00:00:14,605 : Front matter field: categories value python
2017-08-08 00:00:14,606 : Front matter field: github_link value https://github.com/Damien-Black/dnanexus-example-applets/tree/master/Tutorials/python/samtools_count_subprocess_py
2017-08-08 00:00:14,607 : front matter written
2017-08-08 00:00:14,608 : Code region search
2017-08-08 00:00:14,608 : regular comment, line: #!/usr/bin/env python
2017-08-08 00:00:14,608 : regular comment, line: # samtools_count_subprocess_py 0.0.1
2017-08-08 00:00:14,608 : block comment, line: """
2017-08-08 00:00:14,609 : block comment, line: """
2017-08-08 00:00:14,609 : regular comment, line: #
2017-08-08 00:00:14,609 : regular comment, line: # SECTION: Download bam files
2017-08-08 00:00:14,609 : Section change to: Download bam files
2017-08-08 00:00:14,609 : regular comment, line: # ------------------
2017-08-08 00:00:14,609 : regular comment, line: # In order to download the input BAM file we:
2017-08-08 00:00:14,610 : regular comment, line: #  - Establish a DXFile handle by providing a DXLink to dxpy.DXFile()
2017-08-08 00:00:14,610 : regular comment, line: #    - mappings_bam is a DXLink containing the file-id of the input BAM.
2017-08-08 00:00:14,610 : regular comment, line: #    - DXFIle handles have the attribute 'name', the filename on the platform.
2017-08-08 00:00:14,610 : regular comment, line: #      We will use the name attribute to retain the filename programmatically.
2017-08-08 00:00:14,610 : regular comment, line: #  - Download the file to the worker by providing a file-id to dxpy.download_dxfile
2017-08-08 00:00:14,610 : regular comment, line: #    - DXFIle handle's 'get_id()' function returns the file-id on the platform
2017-08-08 00:00:14,611 : regular comment, line: #
2017-08-08 00:00:14,611 : regular comment, line: #
2017-08-08 00:00:14,611 : regular comment, line: # SECTION: Run samtools view
2017-08-08 00:00:14,611 : Section change to: Run samtools view
2017-08-08 00:00:14,611 : regular comment, line: # -----------------
2017-08-08 00:00:14,612 : regular comment, line: # Subprocess takes either a string command or an array of commands that will be
2017-08-08 00:00:14,612 : regular comment, line: # joined to a string. shell=True causes subprocess to use run a string command using
2017-08-08 00:00:14,612 : regular comment, line: # the program specified by the SHELL environmental variable. The default shell
2017-08-08 00:00:14,612 : regular comment, line: # parameter value is False. If an array command is used set shell=False. If a string command
2017-08-08 00:00:14,612 : regular comment, line: # is used set shell=True.
2017-08-08 00:00:14,612 : regular comment, line: #
2017-08-08 00:00:14,613 : regular comment, line: # For convenience we construct our command array before executing the
2017-08-08 00:00:14,613 : regular comment, line: # subprocess.check_call function. subprocess.check_call waits until the
2017-08-08 00:00:14,613 : regular comment, line: # command has executed then either: returns if the command exits 0 or raises a
2017-08-08 00:00:14,613 : regular comment, line: # subprocess.CalledProcessError exception.
2017-08-08 00:00:14,613 : regular comment, line: #
2017-08-08 00:00:14,613 : regular comment, line: #
2017-08-08 00:00:14,614 : regular comment, line: # SECTION: Upload result
2017-08-08 00:00:14,614 : Section change to: Upload result
2017-08-08 00:00:14,614 : regular comment, line: # -------------
2017-08-08 00:00:14,614 : regular comment, line: # We now upload the counts file to the platform. dxpy.upload_local_file() function
2017-08-08 00:00:14,614 : regular comment, line: # will upload the file to the job container, a temporary project which holds onto files
2017-08-08 00:00:14,614 : regular comment, line: # associated with this job. dxpy.upload_local_file returns a DXFile object handle for the
2017-08-08 00:00:14,615 : regular comment, line: # uploaded file.
2017-08-08 00:00:14,615 : regular comment, line: #
2017-08-08 00:00:14,615 : regular comment, line: # SECTION: Associate with output
2017-08-08 00:00:14,615 : Section change to: Associate with output
2017-08-08 00:00:14,615 : regular comment, line: # ---------------------
2017-08-08 00:00:14,615 : regular comment, line: # Finally, we create our output dictionary. The output dictionary should contain
2017-08-08 00:00:14,616 : regular comment, line: # keys corresponding to job output names, specified in the dxapp.json. The value
2017-08-08 00:00:14,616 : regular comment, line: # is a DXLink corresponding to the output file.
2017-08-08 00:00:14,616 : regular comment, line: #
2017-08-08 00:00:14,616 : regular comment, line: # output = {}
2017-08-08 00:00:14,616 : regular comment, line: # output["counts_txt"] = dxpy.dxlink(counts_txt)#
2017-08-08 00:00:14,617 : regular comment, line: #
2017-08-08 00:00:14,617 : regular comment, line: # SECTION-END
2017-08-08 00:00:14,617 : Section change to: None
2017-08-08 00:00:14,617 : Creating code regions
2017-08-08 00:00:14,617 : Kramdown section in /Users/sosazuwa/dnanexus-example-applets/Tutorials/python/samtools_count_subprocess_py/Readme.md Download bam files
2017-08-08 00:00:14,618 : Force line match: {% include note.html content="It's good practice to use `shell=False` when possible, especially when user input is involved. That being said, know your use case, if you need to rely on shell features (even though Python offers modules to mimic these features!) use `shell=True`." %}
2017-08-08 00:00:14,618 : Kramdown section in /Users/sosazuwa/dnanexus-example-applets/Tutorials/python/samtools_count_subprocess_py/Readme.md Run samtools view
2017-08-08 00:00:14,618 : Kramdown section in /Users/sosazuwa/dnanexus-example-applets/Tutorials/python/samtools_count_subprocess_py/Readme.md Upload result
2017-08-08 00:00:14,619 : Kramdown section in /Users/sosazuwa/dnanexus-example-applets/Tutorials/python/samtools_count_subprocess_py/Readme.md Associate with output
